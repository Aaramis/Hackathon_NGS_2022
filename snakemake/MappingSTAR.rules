__threads_MSTAR = config["MappingSTAR"]["threads"]
__version_MSTAR = config["MappingSTAR"]["version"]
__params_MSTAR_Index_Repertory = config["CreateIndex"]["Repertory"]
__params_MSTAR_Bam_Repertory = config["MappingSTAR"]["Repertory"]
__container_MSTAR = "./" + config["MappingSTAR"]["container"]
__params_MSTAR_Gen_Repertory = config["GetGenome"]["Repertory"]
__params_MSTAR_fastq_Repertory = config["GetFastq"]["Repertory"]

#####

rule MappingSTAR :
  input :
    fastq1 = __input_MSTAR_fastq1,
    fastq2 = __input_MSTAR_fastq2,
    index = __input_MSTAR_index

  params :
    index_repertory = __params_MSTAR_Index_Repertory,
    ncbid_id = __params_MSTAR_NCBI_id,
    bam_repertory = __params_MSTAR_Bam_Repertory,
    genome_rep = __params_MSTAR_Gen_Repertory,
    fastq_rep = __params_MSTAR_fastq_Repertory

  output :
    bam = __output_MSTAR_bam

  message :
    "Mapping on {input.fastq1} {input.fastq2} with STAR"

  threads :
    __threads_MSTAR

  version :
    __version_MSTAR

  singularity :
    __container_MSTAR

  log :
    out = __stdout_MSTAR,
    err = __stderr_MSTAR

  shell :
    "dest=fastq-dump/ ;\
    _1=_1 ;\
    _2=_2 ;\
    for id in {params.ncbid_id}; do \
      STAR --runThreadN 4 \
      --runMode generateGenome \
      --genomeDir {params.genome_rep} \
      --genomeFastaFiles $dest$id$_1/$id$_1.fastq $dest$id$_2/$id$_2.fastq \
      --sjdbGTFfile GenomeAnnot/genome_annot.gtf \
      --sjdbOverhang 100 ;\
    done ;\
    echo yes"
#
#    for id in {params.ncbid_id}; do \
#      echo no ; \
#    done; \
  
#    "dest=fastq-dump/ ;\
#    _1=_1;\
#    _2=_2;\"

#    for ncbi_id {params.ncbid_id}; do \
#        STAR --runThreadN 4 \
#        --runMode generateGenome 
#        --genomeDir {params.genome_rep} \
#        --genomeFastaFiles $dest$ncbi_id$_1/$ncbi_id$_1.fastq  $dest$ncbi_id$_2/$ncbi_id$_2.fastq  \
#        --sjdbGTFfile GenomeAnnot/genome_annot.gtf \
#        --sjdbOverhang 100 \
#    done"
#
#  
#    "echo {params.ncbid_id} ;\
#    lst="";\
#    dest=fastq-dump/;\
#    _1=_1;\
#    _2=_2;\
#    space=' ';\
#    for id in {params.ncbid_id} ; do \
#        lst=$lst$dest$id$_1,$dest$id$_2$space;\
#        echo $lst;\
#    done ;\
#    for id in {params.ncbid_id}; do \
        STAR --outSAMstrandField intronMotif \
        --outFilterMismatchNmax 4 \
        --outFilterMultimapNmax 10 \
        --genomeDir {params.index_repertory} \
        --readFilesIn $dest$id$_1,$dest$id$_2 \
        --runThreadN 1  \
        --outSAMunmapped None \
        --outSAMtype BAM SortedByCoordinate \
        --outStd BAM_SortedByCoordinate \
        --genomeLoad NoSharedMemory \
        --limitBAMsortRAM 3000000000 > $id.bam 2> {log.err};\
#        mv $id.bam {params.bam_repertory}$id.bam;\
#        rm Log.* SJ.*; \
#        samtools index {params.bam_repertory}*.bam; \
#    done"
##        samtools view -b -F 4 $id.bam > {params.bam_repertory}$id.bam;\
#