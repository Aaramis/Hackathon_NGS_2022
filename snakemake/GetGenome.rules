__threads_GG = config["GetGenome"]["threads"]
__version_GG = config["GetGenome"]["version"]
__output_GG_Repertory = config["GetGenome"]["Repertory"]
__container_GF = "./" + config["GetFastq"]["container"]

#####

rule GetGenome : 
  params :
    chr = __params_GG_Chromosom,
    repertory = __output_GG_Repertory

  output :
    genome = __output_GG_Genome

  message :
    "GetGenome with sra toolkit for {params.chr} NCBI_id"
  
  threads :
    __threads_GG
  
  version :
    __version_GG

  singularity :
    __container_GF
  
  log :
    out = __stdout_GG,
    err = __stderr_GG

  shell :
    "for chr in {params.chr}; do  \
        i=$(echo $chr |  grep -Eo '[0-9]+$'); \
        wget -O $chr.fa.gz https://ftp.ensembl.org/pub/release-101/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.chromosome.$i.fa.gz 1>{log.out} 2>{log.err}; \
        mv $chr.fa.gz {params.repertory}$chr.fa.gz; \
    done"
#    wget -O $chr.fa.gz https://ftp.ensembl.org/pub/release-101/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.chromosome.1.fa.gz
#    wget -O $chr.fa.gz http://hgdownload.soe.ucsc.edu/goldenPath/hg19/chromosomes/$chr.fa.gz 1>{log.out} 2>{log.err}; \
#    mv $chr.fa.gz {params.repertory}$chr.fa.gz; \
#    done"
#    wget -O {params.chr}.fa.gz http://hgdownload.soe.ucsc.edu/goldenPath/hg19/chromosomes/{params.chr}.fa.gz 1>{log.out} 2>{log.err}; \
#    mv {params.chr}.fa.gz {params.repertory}{params.chr}.fa.gz "
#    rm -rf {params.repertory}{params.chr}.fa.gz"
#    gunzip -c {params.repertory}{params.chr}.fa.gz > {params.repertory}{params.chr}.fa 2> {log.err}; \